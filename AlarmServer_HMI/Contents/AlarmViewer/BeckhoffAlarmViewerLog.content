<div id="Content1_1" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="1700" data-tchmi-height="900">

<div id="TcHmiEventGrid_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEventGrid" data-tchmi-height="900" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-server-interval="1000" data-tchmi-show-menu-bar="True" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="1700" data-tchmi-width-unit="px" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px" data-tchmi-button-font-size-unit="px" data-tchmi-button-height-unit="px">
<script data-tchmi-target-attribute="data-tchmi-filter" type="application/json">
[
  {
    "path": "domain",
    "comparator": "==",
    "value": "TcHmiEventLogger"
  },
  {
    "logic": "AND"
  },
  {
    "path": "timeRaised",
    "comparator": ">",
    "value": "01/01/2021 11:16:37"
  },
  {
    "logic": "AND"
  },
  {
    "path": "timeRaised",
    "comparator": "<",
    "value": "2030-01-01T11:16:37.147Z"
  }
]
</script>
<script data-tchmi-target-attribute="data-tchmi-columns" type="application/json">
[
  {
    "columnName": "alarmState",
    "width": 10,
    "widthUnit": "%",
    "sortable": true
  },
  {
    "columnName": "severity",
    "width": 3,
    "widthUnit": "%"
  },
  {
    "columnName": "timeAndDateRaised",
    "width": 10,
    "widthUnit": "%"
  },
  {
    "columnName": "text",
    "width": 57,
    "widthUnit": "%"
  },
  {
    "columnName": "timeAndDateConfirmed",
    "width": 10,
    "widthUnit": "%"
  },
  {
    "columnName": "timeAndDateCleared",
    "width": 10,
    "widthUnit": "%"
  }
]
</script>
<script data-tchmi-target-attribute="data-tchmi-sorting" type="application/json">
[
  {
    "name": "timeRaised",
    "order": "Descending"
  }
]
</script>

</div>

<div id="TcHmiButton_15" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="30" data-tchmi-height-unit="px" data-tchmi-left="913" data-tchmi-left-unit="px" data-tchmi-text="getDataXlsxTime" data-tchmi-top="4" data-tchmi-top-unit="px" data-tchmi-width="117" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_15.onPressed",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "let date\nTcHmi.Symbol.readEx2('%ctrl%TcHmiCombobox::SelectedIndex%/ctrl%', function (data) {\n    if (data.error === TcHmi.Errors.NONE) {\n        // Handle result value... \n        let value = data.value \n        console.log(value) \n        \n        if (value === 0 ) {\n\t\t\tdate = new Date(new Date().getTime() - (24 * 60 * 60 * 1000))\n\t\t} else if ( value === 1) {\n\t\t\tdate = new Date(new Date().getTime() - (48 * 60 * 60 * 1000))\n\t\t} else if ( value === 2) {\n\t\t\tdate = new Date(new Date().getTime() - (7 * 24 * 60 * 60 * 1000))\n\t\t} else if ( value === 3) {\n\t\t\tdate = new Date(new Date().getTime() - (30 * 24 * 60 * 60 * 1000))\n\t\t} else {\n\t\t\tdate = new Date('Januari 01, 70 00:00:00 GMT+00:00'); \n\t\t} \n        \n    } else {\n        console.log(\"Could not get the selected value from control\"); \n        console.log(data) \n    }\n});\t\n\nasync function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response; // parses JSON response into native JavaScript objects\n}\n\npostData('http://localhost:4000/xlsxTime', { fromDate: date })\n  .then(response => response.blob())\n  .then(blob => {\n    console.log(blob);\n    var url = window.URL.createObjectURL(blob);\n    var a = document.createElement('a');\n    a.href = url;\n    a.download = \"WindWings_Report_\" + Date.now() + \".xlsx\";\n    document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n    a.click();    \n    a.remove();  //afterwards we remove the element again   \n\t      \n  });"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  }
]
</script>
</div>

<div id="TcHmiCombobox" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCombobox" data-tchmi-combobox-text="Select" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-left="639" data-tchmi-left-unit="px" data-tchmi-top="7" data-tchmi-top-unit="px" data-tchmi-width="264" data-tchmi-width-unit="px" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px" data-tchmi-text="Select time frame" data-tchmi-selected-id="0" data-tchmi-background-image-width-unit="px" data-tchmi-background-image-height-unit="px">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>


<script data-tchmi-target-attribute="data-tchmi-src-data" type="application/json">
[
  {
    "index": 0.0,
    "text": "Last day",
    "value": "lastDay"
  },
  {
    "index": 1.0,
    "text": "Last 48h",
    "value": "last48h"
  },
  {
    "index": 2.0,
    "text": "Last Week",
    "value": "lastWeek"
  },
  {
    "index": 3.0,
    "text": "Last Month",
    "value": "lastMonth"
  },
  {
    "index": 4.0,
    "text": "All Data",
    "value": "allData"
  }
]
</script>
</div>

<div id="TcHmiButton_16" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="30" data-tchmi-height-unit="px" data-tchmi-left="1040" data-tchmi-left-unit="px" data-tchmi-text="getDataPdfTime" data-tchmi-top="4" data-tchmi-top-unit="px" data-tchmi-width="117" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-right-unit="px" data-tchmi-bottom-unit="px">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_16.onPressed",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "let date\nTcHmi.Symbol.readEx2('%ctrl%TcHmiCombobox::SelectedIndex%/ctrl%', function (data) {\n    if (data.error === TcHmi.Errors.NONE) {\n        // Handle result value... \n        let value = data.value \n        console.log(value) \n        \n        if (value === 0 ) {\n\t\t\tdate = new Date(new Date().getTime() - (24 * 60 * 60 * 1000))\n\t\t} else if ( value === 1) {\n\t\t\tdate = new Date(new Date().getTime() - (48 * 60 * 60 * 1000))\n\t\t} else if ( value === 2) {\n\t\t\tdate = new Date(new Date().getTime() - (7 * 24 * 60 * 60 * 1000))\n\t\t} else if ( value === 3) {\n\t\t\tdate = new Date(new Date().getTime() - (30 * 24 * 60 * 60 * 1000))\n\t\t} else {\n\t\t\tdate = new Date('Januari 01, 70 00:00:00 GMT+00:00'); \n\t\t} \n        \n    } else {\n        console.log(\"Could not get the selected value from control\"); \n        console.log(data) \n    }\n});\t\n\nasync function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response; // parses JSON response into native JavaScript objects\n}\n\npostData('http://localhost:4000/pdfTime', { fromDate: date })\n  .then(response => response.blob())\n  .then(blob => {\n    console.log(blob);\n    var url = window.URL.createObjectURL(blob);\n    var a = document.createElement('a');\n    a.href = url;\n    a.download = \"WindWings_Report_\" + Date.now() + \".pdf\";\n    document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n    a.click();    \n    a.remove();  //afterwards we remove the element again   \n\t      \n  });"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  }
]
</script>
</div>

</div>